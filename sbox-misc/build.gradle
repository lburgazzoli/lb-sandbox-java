
dependencies {
    compile "com.hazelcast:hazelcast-all:$hazelcastVersion"
    compile "com.fasterxml.jackson.core:jackson-core:$jacksonVersion"
    compile "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
    compile "com.fasterxml.jackson.core:jackson-annotations:$jacksonVersion"
    compile "com.fasterxml.jackson.module:jackson-module-afterburner:$jacksonVersion"
    compile "com.fasterxml.jackson.dataformat:jackson-dataformat-smile:$jacksonVersion"
    compile "org.projectreactor:reactor-core:$reactorVersion"
    compile "org.projectreactor:reactor-tcp:$reactorVersion"
    compile "org.hsqldb:hsqldb:$hsqldbVersion"
    compile "org.apache.openjpa:openjpa:$openjpaVersion"
    compile "net.openhft:chronicle:$openHftChronicleVersion"
    compile "net.openhft:lang:$openHftLangVersion"

    testCompile "junit:junit:$junitVersion"
}

// *****************************************************************************
//
// *****************************************************************************

/*
task openJpaEnhance(dependsOn: classes) << {
    ant.taskdef(
            name      : 'openJpaEnhancerTask',
            classpath : project.runtimeClasspath.asPath,
            classname : 'org.apache.openjpa.ant.PCEnhancerTask'
    )

    ant.openJpaEnhancerTask(
            classpath : project.runtimeClasspath.asPath
    )
}

task openJpaLog4j(dependsOn: openJpaEnhance) << {
    javaexec {
        main      = 'com.github.lburgazzoli.sandbox.jpa.openjpa.OpenJpaMain'
        classpath = project.runtimeClasspath
        args      = ['log4j']
    }
}

task openJpaSlf4j(dependsOn: openJpaEnhance) << {
    javaexec {
        main      = 'com.github.lburgazzoli.sandbox.jpa.openjpa.OpenJpaMain'
        classpath = project.runtimeClasspath
        args      = ['slf4j']
    }
}

task hftChronicleIterator(dependsOn: classes) << {
    javaexec {
        main      = 'IndexedChronicleMain'
        classpath = project.runtimeClasspath
    }
}
*/
